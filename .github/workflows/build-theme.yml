name: Build Themes
on: 
  push:
    tags:
      - '*'

jobs:
  create-release:
    runs-on: ubuntu-20.04
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Save asset upload upload
        run: echo "${{ steps.create_release.outputs.upload_url }}" > upload_url.txt
      - name: Upload upload_url file
        uses: actions/upload-artifact@v1
        with:
          name: upload_url
          path: upload_url.txt
  build-color:
    runs-on: ubuntu-20.04
    needs: create-release
    strategy:
      matrix:
        color: ['{"name":"Indigo-default","selection_color":"#3f51b5","accent_color":"#7986cb","suggestion_color":"#673ab7"}']
    steps:
      - run: git clone https://gitlab.com/tista500/plata-theme.git .
      - name: Prepare system
        run: >
          sudo apt install
          libgtk-3-dev
          autoconf 
          automake
          inkscape
          libgdk-pixbuf2.0-dev
          libglib2.0-dev
          libxml2-utils
          pkg-config
          sassc
          libmarco-dev
          zip
          jq
      - name: Prepare environment
        run: >
          ./autogen.sh --prefix="$(pwd)/build" --enable-gtk_next --enable-plank --enable-telegram --enable-tweetdeck --enable-airforsteam 
          --with-selection_color=$(jq -r '.selection_color' <<< '${{ matrix.color }}') 
          --with-accent_color=$(jq -r '.accent_color' <<< '${{ matrix.color }}') 
          --with-suggestion_color=$(jq -r '.suggestion_color' <<< '${{ matrix.color }}')
      - name: Build images and assets
        run: make
      - name: Build theme
        run: make install
      - name: Pack theme
        uses: thedoctor0/zip-release@0.4.1
        with:
          path: .
          directory: build/share/themes
          filename: release.zip
      - name: Download upload_url file
        uses: actions/download-artifact@v2
        with:
          name: upload_url
      - name: Read upload_url file
        id: upload_url
        run: |
          echo "::set-output name=url::$(cat upload_url.txt)"
          echo "::set-output name=name::$(jq -r '.name' <<< '${{ matrix.color }}')"
      - name: Upload Theme to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload_url.outputs.url }}
          asset_path: build/share/themes/release.zip
          asset_name: ${{ steps.upload_url.outputs.name }}.zip
          asset_content_type: application/zip